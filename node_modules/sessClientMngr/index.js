/* 
* This work has been done by Phillip Ochola Makanyengo
* Email: its2uraps@gmail.com
*
* This work uses open source code and libraries and 
* can therefore be replicated unless certain portions
* are stated otherwise. 
*
* Please refer to the author when using the code.
*
*/

/*
* This module manages sessions and session data by users.. 
* It also manages message decryption and client management
* It allows for intelligent chat service connection management
*/

var clientsList = [];
var sessionsList = [];

function sessEncoder(remoteAddress,remotePort){

}

var appController = {
	sessEncode: function (remoteAddress,remotePort) {
		var timestamp = Date.now();
		var token = remoteAddress + '~' + timestamp + '~' + remotePort
		//encode
		return result;
	},
	
	newSession: function(sessId,sessUser,sock){
		clients.push(sock);
	},
	
	quitSession: function(sessId,sessUser){
		sessionsList.splice(sessionsList.indexOf(), 1);
	},
	
	sendToClient: function(){
		
	},
	
	sendToAll: function(){
		
	}
};

module.exports = appController;
module.exports.sessEncode = sessEncoder;
